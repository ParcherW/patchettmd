GPT_Prompts.txt

create_random_atoms
We need a python function called create_random_atoms to address issue #4 in github. The function should create an arbitrarily specified number of atoms to be initialized. The best way to do this John can think of is to create a funtion that returns a list of Atoms that takes:
1. The number of atoms required in the list, defaults to 1.
2. A random number seed that defaults to 1
3. atom_type that defaults to 0
4. mass that defaults to 1.0
5. A six tuple representing xmin, xmax, ymin, ymax, zmin, zmax that represents a box thatthe position should fall within
6. The maximum absolute of velocity defaulting to 3

The Atom class consructor definition follows:
class Atom:
    def __init__(self, position, velocity, atom_type=0, mass=1.0):
The postion and velocity are both 3 vectors and can be represented as lists or tuples or numpy arrays as they will be cast to numpy arrays in the constructor.

Can you create this function? Pleae don't provide the Atom class or a main, just the funtion.


#############  MDInputReader.py
I am writing an input deck reader class for a molecular Dynamics simulation.
The class is call MDInputReader
The input deck is assumed to be structured in sections like:
[SectionName]
key = value
comments start with a hash # and the rest of the line should be considered a comment. Comments frequently start after the value.
Lines starting with '#' are treated as comments.
There should be a set of defaults that guaranteed to be provided by this class, even if the user does not specify them in the input deck. These defaults are as follows:
[Simulation]
# General simulation parameters
time_step   = 0.0001      # in time units
n_steps     = 10000      # total number of simulation steps
ensemble    = NVE        # simulation ensemble

[System]
# System and geometry information
box_length  = 30.0   # simulation box length (assuming a cubic box)
n_particles = 40     # number of particles in the simulation
boundary = reflecting  # "periodic" or "reflecting"

[Potential]
# Force field parameters (example: Lennard-Jones potential)
potential_type = Lennard-Jones
epsilon        = 2.0
sigma          = 1.0
cutoff         = 2.5

[Output]
# Output options
output_frequency = 200   # write simulation data every 100 steps
output_file      = trajectory.xyz

each of these defaults should have an accessor function.
can you write this class?

